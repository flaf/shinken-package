#!/bin/sh

# Copyright: 2013 Francois Lafont <francois.lafont@ac-versailles.fr>
#
# License: GPL-3.0+
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Valid output :=  <timestamp>;<changed>;<failed>
#   * <timestamp> := the timestamp of the last run.
#   * <changed>   := the number of changed resources or "N/A".
#   * <failed>    := the number of errors during the run or "N/A".

export LC_ALL=C
export PATH="/usr/sbin:/usr/bin:/sbin:/bin"




# Handle with a decent version of Puppet (ie version >= 2.7)
# where a "summary" file is usually available. The path of
# the "summary" file is not the same between Puppet version
# < 4 and Puppet version >= 4.
if [ -f '/opt/puppetlabs/puppet/cache/state/last_run_summary.yaml' ]
then
    SUMMARY='/opt/puppetlabs/puppet/cache/state/last_run_summary.yaml'
elif [ -f '/var/lib/puppet/state/last_run_summary.yaml' ]
then
    SUMMARY='/var/lib/puppet/state/last_run_summary.yaml'
else
    SUMMARY=''
fi

if [ -n "$SUMMARY" ]
then
    summary=$(cat "$SUMMARY")
    timestamp=$(printf '%s' "$summary" | sed -n 's/^[[:space:]]*last_run:[[:space:]]*//p')
    changed=$(printf '%s' "$summary" | sed -n 's/^[[:space:]]*changed:[[:space:]]*//p')
    failed=$(printf '%s' "$summary" | sed -n 's/^[[:space:]]*failed:[[:space:]]*//p')

    # If the puppet run doesn't come to the end (compilation
    # error on the master), the "changed:" and "failed:"
    # fields don't exist. In this case, we decide to have
    # failed=1 and changed=0.
    [ -z "$failed" ] && failed="1"
    [ -z "$changed" ] && changed="0"

    printf '%s;%s;%s\n' "$timestamp" "$changed" "$failed"
    exit 0
fi




##############################################
### Part below for very old Puppet version ###
##############################################

# Note: one day, with a full Puppet N  infrastructure with N
# >= 4, this part can be deleted.

# Handle with a indecent version of Puppet (ie version <
# 2.7) where no "summary" file is available.
if [ -f "/var/lib/puppet/client_yaml/catalog/$(hostname --fqdn).yaml" ]
then
    STATE="/var/lib/puppet/client_yaml/catalog/$(hostname --fqdn).yaml"
else
    STATE=''
fi

if [ -n "$STATE" ]
then
    # We use "state" file to just retrieve its timestamp
    # which is supposed to be the timestamp of the last
    # puppet run.
    timestamp=$(stat --format='%Y' "$STATE")

    printf '%s;N/A;N/A\n' "$timestamp"
    exit 0
fi

###################################################
### End of the part for very old Puppet version ###
###################################################




# Handle when no "summary" file has been found.
echo 'No information about the last puppet run has been found. Is Puppet really installed?'
exit 0


