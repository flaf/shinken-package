#!/bin/sh

# Copyright: 2013 Francois Lafont <francois.lafont@ac-versailles.fr>
#
# License: GPL-3.0+
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -e

problem() {
    # We print a message error only if there is an exit code != 0.
    if [ "$?" != "0" ]
    then
        echo "Error during the execution of the check."
        exit 1
    fi
}

trap problem EXIT

export LC_ALL=C
export PATH="/usr/sbin:/usr/bin:/sbin:/bin"
OPTIONS="--portability --local"

# Below, try a new method without the "join" command and
# without a temporary file.
#
#
#file_temp=$(mktemp)
#df $OPTIONS --block-size=1K | tail -n +2 | grep "^/" | sort | awk '{ print $1":"$6":"$2":"$3 }' > "$file_temp"
#df $OPTIONS --human-readable | tail -n +2 | grep "^/" | sort | awk '{ print $1":"$2":"$3":"$5 }' | join -t ":" "$file_temp" -
#rm "$file_temp"

# We want to check "devices" which match with:
#
#   * "^/" to catch /dev/xxx... etc.
#   * or "pool" to catch ZFS filesystem.
#
a=$(df $OPTIONS --block-size=1K  | awk '$1 ~ /(^\/|pool)/ { print $1":"$6":"$2":"$3 }' | sort)
b=$(df $OPTIONS --human-readable | awk '$1 ~ /(^\/|pool)/ { print $1":"$2":"$3":"$5 }' | sort)

printf '%s\n' "$a" | while read la <&0 && read lb <&3
do
    printf '%s:%s\n' "$la" "${lb#*:}"
done 3<< EOF
$b
EOF


