#!/bin/sh
# postinst script for snmpd-extend
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

export PATH="/usr/sbin:/usr/bin:/sbin:/bin"
export LC_ALL="C"

BIN_DIR="/usr/share/snmpd-extend/bin"
SNMP_CONF_SRC="/usr/share/snmpd-extend/conf/snmpd.local.conf"
SNMP_CONF="/etc/snmp/snmpd.local.conf"
CODENAME=$(lsb_release --codename --short)

BEGIN_DELIMITER="### Begin snmpd-extend ###"
END_DELIMITER="### End snmpd-extend ###"
SUDOERS_CONF_SRC="/usr/share/snmpd-extend/conf/snmpd-extend.sudoers"

is_old_distribution () {
    if [ "$CODENAME" = "etch" ] || [ "$CODENAME" = "lenny" ]
    then
        true
    else
        false
    fi
}

if is_old_distribution
then
    SUDOERS_CONF="/etc/sudoers"
else
    SUDOERS_CONF="/etc/sudoers.d/snmpd-extend"
fi




case "$1" in
    configure)

        # Set permissions in the bin/ directory.
        for f in "$BIN_DIR/"*
        do
            [ "$f" = "$BIN_DIR/*" ] && continue
            chown root:root "$f"
            chmod 755 "$f"
        done

        # Add the extend instruction in the SNMP configuration.
        cat "$SNMP_CONF_SRC" > "$SNMP_CONF"
        chown root:root "$SNMP_CONF"
        chmod 600 "$SNMP_CONF"

        if is_old_distribution
        then
            tmp_file=$(mktemp)

            # We remove the "snmpd-extend" bloc (if exists) in the "sudoers" file.
            sed -n '/^'"$BEGIN_DELIMITER"'$/,/^'"$END_DELIMITER"'$/!p' "$SUDOERS_CONF" > "$tmp_file"

            # We remove the empty lines (if exist) in $tmp_file.
            sed -ni '1h;1!H;${x;s/[[:space:]]*$//;p}' "$tmp_file"

            # We add the "snmpd-extend" bloc at the end of $tmp_file.
            echo "" >> "$tmp_file"
            echo "$BEGIN_DELIMITER" >> "$tmp_file"
            echo "# Don't edit this bloc reserved to the snmpd-extend package." >> "$tmp_file"
            echo "# Especially, don't edit the delimiters." >> "$tmp_file"
            cat "$SUDOERS_CONF_SRC" >> "$tmp_file"
            echo "$END_DELIMITER" >> "$tmp_file"
            echo "" >> "$tmp_file"

            cat "$tmp_file" > "$SUDOERS_CONF"
            rm -f "$tmp_file"
        else
            # We can use the sudoers.d directory.
            cat "$SUDOERS_CONF_SRC" > "$SUDOERS_CONF"
            chown root:root "$SUDOERS_CONF"
            chmod 440 "$SUDOERS_CONF"
        fi

        # We just want to 1) stop the daemon snmpd before
        # install/remove/purge/upgrade and 2) start after.
        # See the diagrams here https://wiki.debian.org/MaintainerScripts
        if [ -x "/etc/init.d/snmpd" ]; then
            # If snmpd is running, it's probably because the
            # package in the previous version hadn't stopped
            # the service before the upgrade. So, a restart
            # is more safe.
            echo "Restarting snmpd..."
            sleep 1
            invoke-rc.d snmpd restart || true
        fi

        # Temporary. When the old package is removed, the /opt
        # directory can be removed too.
        if [ ! -e /opt ]; then
            mkdir /opt
            chown root:root /opt
            chmod 0755 /opt
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
