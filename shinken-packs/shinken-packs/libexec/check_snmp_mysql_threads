#!/bin/sh

# Copyright: 2014 Fran√ßois Lafont <francois.lafont@ac-versailles.fr>
#
# License: GPL-3.0+
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

SCRIPT_NAME=${0##*/}
SCRIPT_DIRECTORY=${0%/*}
SPECIFIC_SHORT_OPTIONS='w:,c:'
SPECIFIC_LONG_OPTIONS='warning:,critical:'
SPECIFIC_SYNOPSIS='[--warning <num> --critical <num>]'

# Default thresholds.
WARNING=10
CRITICAL=20

GET_SPECIFIC_OPTIONS () {
    case "$1" in
        --warning|-w)
            WARNING="$2"
            return 2
        ;;
        --critical|-c)
            CRITICAL="$2"
            return 2
        ;;
    esac
    return 0
}

. "$SCRIPT_DIRECTORY/share/snmp.sh"

# The oid 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull."get_mysql_threads"'
# in text format.
oid='.1.3.6.1.4.1.8072.1.3.2.3.1.2.17.103.101.116.95.109.121.115.113.108.95.116.104.114.101.97.100.115'

# SNMP request.
if output=$(snmpget $SNMP_CMD_OPTIONS -OvQ "$HOSTNAME" "$oid" 2>&1)
then

    # Remove leading double quotes.
    output="${output#\"}"
    output="${output%\"}"

    # Number of threads connected.
    threads=$(echo "$output" | sed -r -n 's/^threads_connected=([0-9]+)$/\1/p')

    if [ -z "$threads" ]
    then
        # The output is incorrect (even if the "snmpget" command
        # has succeeded).
        output=$(echo $output | tr '\n' ' ') # replace \n by ' '.
        echo "Unexpected output in the snmpget request: \"$output\""
        exit "$CODE_UNKNOWN"
    fi

    if  [ "$threads" -lt "$WARNING" ]
    then
        echo "MySQL threads connected OK: $threads (thresholds are $WARNING,$CRITICAL)."
        exit "$CODE_OK"
    elif [ "$threads"  -lt "$CRITICAL" ]
    then
        echo "MySQL threads connected WARNING: $threads (thresholds are $WARNING,$CRITICAL)."
        exit "$CODE_WARNING"
    else
        echo "MySQL threads connected CRITICAL: $threads (thresholds are $WARNING,$CRITICAL)."
        exit "$CODE_CRITICAL"
    fi

else

    # The "snmpget" command hasn't succeeded.
    echo "$output"
    exit "$CODE_UNKNOWN"

fi


