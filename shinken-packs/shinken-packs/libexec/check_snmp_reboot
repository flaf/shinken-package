#!/bin/sh

# Copyright: 2013 Francois Lafont <francois.lafont@crdp.ac-versailles.fr>
#
# License: GPL-3.0+
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

#set -x
SCRIPT_NAME=${0##*/}
SCRIPT_DIRECTORY=${0%/*}

. "$SCRIPT_DIRECTORY/share/check_snmp_header"

# The string which represents a "unknown" uptime.
UNKNOWN_UPTIME="unknown"

# The oid of the "uptime" object in digital format which corresponds to the
# "HOST-RESOURCES-MIB::hrSystemUptime.0" in text format.
OID='.1.3.6.1.2.1.25.1.1.0'

# The perftada of this plugin always follows this pattern:
#       last_uptime=xxxx
# where xxxx is either an interger (for example 91234) or "$UNKNOWN_UPTIME".
extract_perfdata_uptime () {
    echo "$1" | cut -d'=' -f2
}

# Getting of the last_uptime.
# If perfdata is empty, then this is the first check.
if [ -z "$perfdata" ]; then
    FIRST_CHECK="true"
    last_uptime="$UNKNOWN_UPTIME"
else
    FIRST_CHECK="false"
    last_uptime=$(extract_perfdata_uptime "$perfdata")
fi

# Getting of the host uptime.
if output=$(snmpget -Ovt -r "$retry" -t "$timeout" $AUTH_OPTIONS "$host" "$OID" 2>&1); then

    # The "snmpget" command has succeeded.
    if echo "$output" | grep -qE '^[0-9]+$'; then

        ## The output is correct.
        uptime="$output"

        if [ "$last_uptime" = "$UNKNOWN_UPTIME" ]; then
            ### The last_uptime is unknown.
            if $FIRST_CHECK; then
                echo "First check: previous_uptime=$last_uptime, uptime=${uptime}cs. | last_uptime=$uptime"
                exit "$OK"
            else
                echo "Previous uptime unknown: previous_uptime=$last_uptime, uptime=${uptime}cs. | last_uptime=$uptime"
                exit "$UNKNOWN"
            fi
        else
            ### The last_uptime is known.
            if [ "$last_uptime" -lt "$uptime"  ]; then
                echo "No reboot from the host: previous_uptime=${last_uptime}cs, uptime=${uptime}cs. | last_uptime=$uptime"
                exit "$OK"
            else
                echo "The host has rebooted: previous_uptime=${last_uptime}cs, uptime=${uptime}cs. | last_uptime=$uptime"
                exit "$WARNING"
            fi
        fi

    else

        ## The output is incorrect (unlikely when the "snmpget" command has succeeded).
        echo "Unexpected output in the snmpget request: \"$output\". | last_uptime=$last_uptime"
        exit "$UNKNOWN"

    fi

else

    # The "snmpget" command hasn't succeeded.
    echo "$output | last_uptime=$last_uptime"
    exit "$UNKNOWN"

fi



