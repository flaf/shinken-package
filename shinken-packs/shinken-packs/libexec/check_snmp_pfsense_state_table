#!/bin/sh

# Copyright: 2013 Francois Lafont <francois.lafont@crdp.ac-versailles.fr>
#
# License: GPL-3.0+
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

#set -x
SCRIPT_NAME=${0##*/}
SCRIPT_DIRECTORY=${0%/*}

. "$SCRIPT_DIRECTORY/share/check_snmp_header"

# This oid give the number of entries in the state table in a
# pfsense firewall.
# The translation in MIB on Linux is:
# ~# snmptranslate .1.3.6.1.4.1.12325.1.200.1.3.1.0 -m ALL -L n
# SNMPv2-SMI::enterprises.12325.1.200.1.3.1.0
OID='.1.3.6.1.4.1.12325.1.200.1.3.1.0'

if [ "$warning" -ge "$critical" ]
then
    echo "The WARNING treshold must be lower than the CRITICAL treshold."
    exit "$UNKNOWN"
fi

# Getting of size of the state table.
if output=$(snmpget -OQv -r "$retry" -t "$timeout" $AUTH_OPTIONS "$host" "$OID" 2>&1)
then

    # The "snmpget" command has succeeded.
    if echo "$output" | grep -qE '^[0-9]+$'
    then

        if [ "$output" -le "$warning" ]
        then
            echo "OK, number of entries in the state table (${output}) =< $warning."
            exit "$OK"
        elif [ "$output" -gt "$critical" ]
        then
            echo "CRITICAL, number of entries in the state table (${output}) > $critical."
            exit "$CRITICAL"
        else
            echo "WARNING, number of entries in the state table (${output}) > $warning."
            exit "$WARNING"
        fi
   else

        ## The output is incorrect (unlikely when the "snmpget" command has succeeded).
        echo "Unexpected output in the snmpget request: \"$output\""
        exit "$UNKNOWN"

    fi

else

    # The "snmpget" command hasn't succeeded.
    echo "$output"
    exit "$UNKNOWN"

fi


