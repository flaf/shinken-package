#!/bin/sh

# Copyright: 2013 Francois Lafont <francois.lafont@crdp.ac-versailles.fr>
#
# License: GPL-3.0+
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

#set -x
SCRIPT_NAME=${0##*/}
SCRIPT_DIRECTORY=${0%/*}

. "$SCRIPT_DIRECTORY/share/check_snmp_header"

# The OID 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull."get_inodes"' in text format.
OID='.1.3.6.1.4.1.8072.1.3.2.3.1.2.10.103.101.116.95.105.110.111.100.101.115'

# Getting of the inodes use.
if output=$(snmpget -OvQ -r "$retry" -t "$timeout" $AUTH_OPTIONS "$host" $OID 2>&1) \
    && echo "$output" | grep -qE '^"?/?.*:[0-9]+%'
then

    # Remove leading double quotes because snmpget adds
    # leading double quotes when we use a numerical OID (but
    # not with a string OID, it is not logical but it is
    # so).
    output="${output#\"}"
    output="${output%\"}"

    # For the moment, everything's fine.
    CRIT="false"
    WARN="false"

    # The "snmpget" command has succeeded and has the good format.
    for line in $output; do
        device=$(echo "$line" | cut -d":" -f1)
        percent=$(echo "$line" | cut -d":" -f2 | tr -d '%')
        data_list="$data_list $device $percent%,"
        if [ "$percent" -ge "$critical" ]; then
            CRIT="true"
        elif [ "$percent" -ge "$warning" ]; then
            WARN="true"
        fi
    done

    data_list=$(echo ${data_list%,}) # remove of the "," and the space.

    if "$CRIT"; then
        echo "Inodes use CRITICAL: $data_list (critical threshold $critical%)."
        exit "$CRITICAL"
    elif "$WARN"; then
        echo "Inodes use WARNING: $data_list (warning threshold $warning%)."
        exit "$WARNING"
    else
        echo "Inodes use OK: $data_list (warning threshold $warning%)."
        exit "$OK"
    fi

else

    # The "snmpget" command hasn't succeeded.
    echo "$output"
    exit "$UNKNOWN"

fi



