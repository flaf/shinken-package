#!/bin/sh

# Copyright: 2013 Francois Lafont <francois.lafont@ac-versailles.fr>
#
# License: GPL-3.0+
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

SCRIPT_NAME=${0##*/}
SCRIPT_DIRECTORY=${0%/*}
SPECIFIC_SHORT_OPTIONS=''
SPECIFIC_LONG_OPTIONS=''
SPECIFIC_SYNOPSIS=''

GET_SPECIFIC_OPTIONS () {
    return 0
}

. "$SCRIPT_DIRECTORY/share/snmp.sh"

# The oid 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull."get_mounts"' in text format.
oid='.1.3.6.1.4.1.8072.1.3.2.3.1.2.10.103.101.116.95.109.111.117.110.116.115'

# Getting of the ceph status.
output=$(snmpget $SNMP_CMD_OPTIONS -OvQ "$HOSTNAME" "$oid" 2>&1)

# Remove leading double quotes.
output="${output#\"}"
output="${output%\"}"

if [ -z "$output" ]
then
    # TODO: with a version of snmpd-extend >= 1.4.1, an empty
    # output is NOT a valid output. But for old version, we
    # currently assume that it's a valid output.
    echo "Mountpoints OK: no specific mountpoint to check."
    exit "$CODE_OK"
    # TODO: normally it should be:
    #
    #    good_output='false'
    #
elif printf '%s' "$output" | grep -vqE '^/.+:(problem|ok)$'
then
    # There is a line, at least, which doesn't match with the pattern.
    good_output='false'
else
    # All lines of the output are Ok.
    good_output='true'
fi

if "$good_output"
then
    # The output is correct.
    # For the moment, everything's fine.
    CRIT="false"

    for line in $output
    do
        mountpoint="${line%:*}"
        status="${line#*:}"
        mounts_list="$mounts_list $mountpoint=$status"
        [ "$status" = "problem" ] && CRIT="true"
    done

    if "$CRIT"
    then
        printf 'Mountpoints CRITICAL:%s.\n' "$mounts_list"
        exit "$CODE_CRITICAL"
    else
        printf 'Mountpoints OK:%s.\n' "$mounts_list"
        exit "$CODE_OK"
    fi
else
    # The output is not valid.
    output=$(printf '%s' "$output" | tr '\n' ' ')
    printf 'Unexpected output: %s\n' "$output"
    exit "$CODE_UNKNOWN"
fi


