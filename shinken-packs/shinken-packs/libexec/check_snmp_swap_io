#!/bin/sh

# Copyright: 2013 Francois Lafont <francois.lafont@crdp.ac-versailles.fr>
#
# License: GPL-3.0+
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

#set -x
SCRIPT_NAME=${0##*/}
SCRIPT_DIRECTORY=${0%/*}

. "$SCRIPT_DIRECTORY/share/check_snmp_header"

# Equivalent to 'UCD-SNMP-MIB::ssSwapIn.0 UCD-SNMP-MIB::ssSwapOut.0'.
OID='.1.3.6.1.4.1.2021.11.3.0 .1.3.6.1.4.1.2021.11.4.0'

# Getting of the host swap in-out.
if output=$(snmpget -OvQ -r "$retry" -t "$timeout" $AUTH_OPTIONS "$host" $OID 2>&1); then

    # The "snmpget" command has succeeded.
    if [ $(echo "$output" | grep -cE '^[0-9]+$') = 2 ]; then

        ## The output is correct.
        swap_in=$(echo "$output" | sed -n '1p')
        swap_out=$(echo "$output" | sed -n '2p')

        # The thresholds.
        swap_in_warn=$(echo "$warning" | cut -d',' -f1)
        swap_out_warn=$(echo "$warning" | cut -d',' -f2)
        swap_in_crit=$(echo "$critical" | cut -d',' -f1)
        swap_out_crit=$(echo "$critical" | cut -d',' -f2)

        if [ "$swap_in" -lt "$swap_in_warn"  ] && [ "$swap_out" -lt "$swap_out_warn" ]; then
            echo "Swap in/out OK: swap-in=${swap_in}kB, swap-out=${swap_out}kB."
            exit "$OK"
        elif [ "$swap_in" -lt "$swap_in_crit"  ] && [ "$swap_out" -lt "$swap_out_crit" ]; then
            echo "Swap in/out WARNING: swap-in=${swap_in}kB, swap-out=${swap_out}kB (warning thresholds swap-in=${swap_in_warn}kB, swap-out=${swap_out_warn}kB)."
            exit "$WARNING"
        else
            echo "Swap in/out CRITICAL: swap-in=${swap_in}kB, swap-out=${swap_out}kB (critical thresholds swap-in=${swap_in_crit}kB, swap-out=${swap_out_crit}kB)."
            exit "$CRITICAL"
        fi

    else

        ## The output is incorrect (unlikely when the "snmpget" command has succeeded).
        echo "Unexpected output in the snmpget request: \"$output\"."
        exit "$UNKNOWN"

    fi

else

    # The "snmpget" command hasn't succeeded.
    echo "$output"
    exit "$UNKNOWN"

fi



