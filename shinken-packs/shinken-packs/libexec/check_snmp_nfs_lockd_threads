#!/bin/sh

SCRIPT_NAME=${0##*/}
SCRIPT_DIRECTORY=${0%/*}
SPECIFIC_SHORT_OPTIONS='w:,c:'
SPECIFIC_LONG_OPTIONS='warning:,critical:'
SPECIFIC_SYNOPSIS='[-w <integer>] -c <integer>'

GET_SPECIFIC_OPTIONS () {
    case "$1" in
        --warning|-w)
            warning="$2"
            return 2
        ;;
        --critical|-c)
            critical="$2"
            return 2
        ;;
    esac
    return 0
}

. "$SCRIPT_DIRECTORY/share/snmp.sh"

# Checking options.
if ! echo "$critical" | grep -qE '^[0-9]+$'
then
    echo "You must apply the --critical option wich must be an integer."
    exit "$CODE_UNKNOWN"
fi

if [ -z "$warning" ]
then
    # If warning option is not provided, set to 80% of critical.
    warning=$((critical * 80 / 100))
elif ! echo "$warning" | grep -qE '^[0-9]+$'
then
    echo "The --warning option must be an integer."
    exit "$CODE_UNKNOWN"
fi

# The oid 'NET-SNMP-EXTEND-MIB::nsExtendOutputFull."get_lockd_threads"' in text format.
oid='.1.3.6.1.4.1.8072.1.3.2.3.1.2.17.103.101.116.95.108.111.99.107.100.95.116.104.114.101.97.100.115'

# Getting of the host uptime.
if output=$(snmpget $SNMP_CMD_OPTIONS -OvQ "$HOSTNAME" "$oid" 2>&1)
then

    # Remove leading double quotes.
    output=$(echo "${output#\"}")
    output=$(echo "${output%\"}")

    if ! echo "$output" | head -n 1 | grep -Eq '^[0-9]+$'
    then
        # The output is incorrect (unlikely when the "snmpget" command has succeeded).
        echo "Unexpected output in the snmpget request: \"$output\""
        exit "$CODE_UNKNOWN"
    fi

    if [ "$output" -ge "$critical" ]
    then
        echo "Number of lockd threads CRITICAL: $output (>= $critical)."
        exit "$CODE_CRITICAL"
    fi

    if [ "$output" -ge "$warning" ]
    then
        echo "Number of lockd threads WARNING: $output (>= $warning)."
        exit "$CODE_WARNING"
    fi

    # All is fine.
    echo "Number of lockd threads is OK: $output (< $warning)."
    exit "$CODE_OK"

else

    # The "snmpget" command hasn't succeeded.
    echo "$output"
    exit "$CODE_UNKNOWN"

fi


